name: Build product
on:
  push:
    branches:
      - master
  workflow_dispatch: {}

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v5
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      # install net framework 4
      - name: Install DNF 4.8 packs
        shell: pwsh
        working-directory: "C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer"
        run: |
          $InstallPath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
          $WorkLoads = '--add Microsoft.Net.Component.4.8.SDK --add Microsoft.Net.Component.4.8.TargetingPack --add Microsoft.Net.ComponentGroup.4.8.DeveloperTools'
          $Arguments = ('/c', "vs_installer.exe", 'modify', '--installPath', "`"$InstallPath`"", $WorkLoads, $WorkLoads, '--quiet', '--norestart', '--nocache')
          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
      # install msi from sdk/SharedFilesInstaller_File.msi
      # - name: Install SharedFilesInstaller
      #   run: |
      #     Start-Process msiexec.exe -ArgumentList '/i sdk/SharedFilesInstaller_File.msi /quiet /norestart' -Wait
      # build C# project from XNAContentCompiler.sln
      - name: Build XNAContentCompiler
        run: |
          msbuild XNAContentCompiler.sln /p:Configuration=Release /p:Platform=x86 /m
      # zip files in XNA-CC-CLI\bin\Release
      - name: Zip files
        run: |
          Compress-Archive -Path XNA-CC-CLI\bin\Release\* -DestinationPath XNAContentCompiler.zip
      # create release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: Release v1.0.${{ github.run_number }}
          draft: false
          prerelease: false
