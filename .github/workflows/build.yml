name: Build product
on:
  push:
    branches:
      - master
  workflow_dispatch: {}

env:
  VERSION_MAJOR: 1
  VERSION_MINOR: 0
  VERSION_REV_OFFSET: 10

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Make version
        id: version
        shell: bash
        run: |
          VERSION_REVISION=$(( ${{ github.run_number }} - $VERSION_REV_OFFSET ))
          VERSION_STRING="v${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.$VERSION_REVISION"
          echo "value=${VERSION_STRING}" >> $GITHUB_OUTPUT
          echo "Version: ${VERSION_STRING}"
      - uses: actions/checkout@v5
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      # install net framework 4
      - name: Install Net4
        shell: pwsh
        run: |
          $downloadUrl = "https://download.microsoft.com/download/e/2/1/e21644b5-2df2-47c2-91bd-63c560427900/NDP452-KB2901907-x86-x64-AllOS-ENU.exe"
          $output = "NDP452-KB2901907-x86-x64-AllOS-ENU.exe"
          Invoke-WebRequest -Uri $downloadUrl -OutFile $output
          Start-Process -FilePath $output -ArgumentList "/quiet", "/norestart" -Wait
      - name: Download and install XNA 4.0
        run: |
          $xnaUrl = "https://download.microsoft.com/download/a/c/2/ac2c903b-e6e8-42c2-9fd7-bebac362a930/xnafx40_redist.msi"
          Invoke-WebRequest -Uri $xnaUrl -OutFile "xnafx40_redist.msi"
          Start-Process msiexec.exe -ArgumentList '/i xnafx40_redist.msi /quiet /norestart' -Wait
      # build C# project from XNAContentCompiler.sln
      - name: Build XNAContentCompiler
        run: |
          msbuild XNAContentCompiler.sln /p:Configuration=Release /p:Platform=x86 /m
      # zip files in XNA-CC-CLI\bin\Release
      - name: Zip files
        run: |
          Compress-Archive -Path XNA-CC-CLI\bin\Release\* -DestinationPath XNAContentCompiler-${{ steps.version.outputs.value }}.zip
      # create release and contain zip file
      - name: Release - ${{ steps.version.outputs.value }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.value }}
          name: ${{ steps.version.outputs.value }}
          files: XNAContentCompiler-${{ steps.version.outputs.value }}.zip
          target_commitish: ${{ github.ref }}
          prerelease: false
